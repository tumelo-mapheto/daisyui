import{s as xt,O as za,T as rt,f as r,a as l,l as dt,H as Ya,g as d,h,d as t,c,x as la,m as it,I as Va,j as y,i,y as e,z as $t}from"../chunks/scheduler.2199cf1f.js";import{S as yt,i as vt,b,d as f,m,a as u,t as g,e as x}from"../chunks/index.ccf04077.js";import{g as ht,a as bt}from"../chunks/spread.8a54911c.js";import{M as kt}from"../chunks/mdsvex.df6a50a7.js";import{T as $}from"../chunks/Translate.c5bbc6f1.js";function _t(sa){let o,k,w,n,p,_,S,Ha,na,Ga='<li><span class="badge badge-xs bg-green-500"></span> bg-green-500</li> <li><span class="badge badge-xs bg-orange-600"></span> bg-orange-600</li> <li><span class="badge badge-xs bg-blue-700"></span> bg-blue-700</li> <li>etc.</li>',Ta,A,Aa,ea,Ja='<li><span class="badge badge-xs bg-primary"></span> bg-primary</li> <li><span class="badge badge-xs bg-secondary"></span> bg-secondary</li> <li><span class="badge badge-xs bg-accent"></span> bg-accent</li> <li>etc.</li>',Ra,R,Wa,W,E,Ka='<span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span>',N,Na,I,Ia,q,ba,M,O,Qa='<span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span>',F,fa,B,ma,U,oa,j,ca,C,ua,qa,ra,P,Fa,da,D,Ba,ia,Y,Ua,pa,Xa='<tr><td><span class="badge relative top-4 bg-primary"></span></td> <td><span class="font-mono font-bold">primary</span> <br/> <span class="text-xs opacity-60">Primary color</span></td> <td><span class="badge badge-sm">required</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-primary</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--p))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-primary-focus"></span></td> <td><span class="font-mono font-bold">primary-focus</span> <br/> <span class="text-xs opacity-60">Primary color when focused</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a darker tone of primary if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-primary-focus</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--pf))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-primary-content"></span></td> <td><span class="font-mono font-bold">primary-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on primary color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of primary if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-primary-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--pc))</code></span></td></tr> <tr><td></td> <td></td> <td></td> <td></td></tr> <tr><td><span class="badge relative top-4 bg-secondary"></span></td> <td><span class="font-mono font-bold">secondary</span> <br/> <span class="text-xs opacity-60">Secondary color</span></td> <td><span class="badge badge-sm">required</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-secondary</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--s))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-secondary-focus"></span></td> <td><span class="font-mono font-bold">secondary-focus</span> <br/> <span class="text-xs opacity-60">Secondary color when focused</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a darker tone of secondary if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-secondary-focus</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--sf))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-secondary-content"></span></td> <td><span class="font-mono font-bold">secondary-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on secondary color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of secondary if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-secondary-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--sc))</code></span></td></tr> <tr><td></td> <td></td> <td></td> <td></td></tr> <tr><td><span class="badge relative top-4 bg-accent"></span></td> <td><span class="font-mono font-bold">accent</span> <br/> <span class="text-xs opacity-60">Accent color</span></td> <td><span class="badge badge-sm">required</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-accent</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--a))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-accent-focus"></span></td> <td><span class="font-mono font-bold">accent-focus</span> <br/> <span class="text-xs opacity-60">Accent color when focused</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a darker tone of accent if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-accent-focus</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--af))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-accent-content"></span></td> <td><span class="font-mono font-bold">accent-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on accent color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of accent if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-accent-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--ac))</code></span></td></tr> <tr><td></td> <td></td> <td></td> <td></td></tr> <tr><td><span class="badge relative top-4 bg-neutral"></span></td> <td><span class="font-mono font-bold">neutral</span> <br/> <span class="text-xs opacity-60">Neutral color</span></td> <td><span class="badge badge-sm">required</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-neutral</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--n))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-neutral-focus"></span></td> <td><span class="font-mono font-bold">neutral-focus</span> <br/> <span class="text-xs opacity-60">Neutral color when focused</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a darker tone of neutral if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-neutral-focus</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--nf))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-neutral-content"></span></td> <td><span class="font-mono font-bold">neutral-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on neutral color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of neutral if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-neutral-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--nc))</code></span></td></tr> <tr><td></td> <td></td> <td></td> <td></td></tr> <tr><td><span class="badge relative top-4 bg-base-100"></span></td> <td><span class="font-mono font-bold">base-100</span> <br/> <span class="text-xs opacity-60">Base color of page, used for blank backgrounds</span></td> <td><span class="badge badge-sm">required</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-base-100</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--b1))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-base-200"></span></td> <td><span class="font-mono font-bold">base-200</span> <br/> <span class="text-xs opacity-60">Base color, a little darker</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a darker tone of base-100 if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-base-200</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--b2))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-base-300"></span></td> <td><span class="font-mono font-bold">base-300</span> <br/> <span class="text-xs opacity-60">Base color, even more darker</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a darker tone of base-200 if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-base-300</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--b3))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-base-content"></span></td> <td><span class="font-mono font-bold">base-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on base color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of base-100 if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-base-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--bc))</code></span></td></tr> <tr><td></td> <td></td> <td></td> <td></td></tr> <tr><td><span class="badge relative top-4 bg-info"></span></td> <td><span class="font-mono font-bold">info</span> <br/> <span class="text-xs opacity-60">Info color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a default blue color if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-info</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--in))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-info-content"></span></td> <td><span class="font-mono font-bold">info-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on info color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of info if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-info-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--inc))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-success"></span></td> <td><span class="font-mono font-bold">success</span> <br/> <span class="text-xs opacity-60">Success color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a default green color if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-success</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--su))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-success-content"></span></td> <td><span class="font-mono font-bold">success-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on success color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of success if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-success-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--suc))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-warning"></span></td> <td><span class="font-mono font-bold">warning</span> <br/> <span class="text-xs opacity-60">Warning color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a default orange color if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-warning</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--wa))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-warning-content"></span></td> <td><span class="font-mono font-bold">warning-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on warning color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of warning if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-warning-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--wac))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-error"></span></td> <td><span class="font-mono font-bold">error</span> <br/> <span class="text-xs opacity-60">Error color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a default red color if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-error</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--er))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-error-content"></span></td> <td><span class="font-mono font-bold">error-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on error color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of error if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-error-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--erc))</code></span></td></tr>',ga,H,L,Za='<span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span>',V,xa,z,$a,G,ya,J,va,mt='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code>',ha,K,ka,Q,_a,ut='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox checkbox-secondary<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>',Ca,X,wa,Z,Sa,aa,Ea,gt=`<code class="language-css"><span class="token selector">bg-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">to-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">via-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">from-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">text-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">ring-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">fill-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">caret-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">stroke-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">border-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">divide-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">accent-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">shadow-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">outline-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">decoration-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">placeholder-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">ring-offset-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span></code>`,Oa,ta,La;return k=new $({props:{text:"Introduction"}}),p=new $({props:{text:"daisyUI is fully themeable and colorable,"}}),S=new $({props:{text:"So instead of using constant color utility classes like:"}}),A=new $({props:{text:"It's suggested to use semantic color utility classes like:"}}),R=new $({props:{text:"Each color name contains CSS variables and each daisyUI theme applies color values to the utility classes when it is applied."}}),N=new $({props:{text:"Benefits"}}),I=new $({props:{text:"Semantic color names make more sense because when we design interfaces, we don't just use any random color. We define a specific color palette with names like <code>primary</code>, <code>secondary</code>, etc. and we only use those specific colors in our interfaces."}}),q=new $({props:{text:"Also, using semantic color names makes theming easier. You wouldn't have to define dark-mode colors for every single element and you wouldn't be limited to only light/dark themes. you can have multiple themes available and each theme is just a few lines of CSS variables."}}),F=new $({props:{text:"List of all daisyUI color names"}}),B=new $({props:{text:"You can use these color names in your theme or in utility classes."}}),P=new $({props:{text:"Color name + description"}}),D=new $({props:{text:"Required or optional for themes"}}),Y=new $({props:{text:"Example use"}}),V=new $({props:{text:"How to use"}}),z=new $({props:{text:"Some daisyUI components come with modifier class names and that modifier class name will apply a color."}}),G=new $({props:{text:"For example"}}),K=new $({props:{text:"Or"}}),X=new $({props:{text:"You can also use color names in utility classes just like Tailwind's original color names."}}),Z=new $({props:{text:"These are utility classes that can be used with a color name:"}}),ta=new $({props:{text:"So you can use <code>bg-primary</code>, <code>border-secondary</code>, etc."}}),{c(){o=r("h2"),b(k.$$.fragment),w=l(),n=r("div"),b(p.$$.fragment),_=l(),b(S.$$.fragment),Ha=l(),na=r("ul"),na.innerHTML=Ga,Ta=l(),b(A.$$.fragment),Aa=l(),ea=r("ul"),ea.innerHTML=Ja,Ra=l(),b(R.$$.fragment),Wa=l(),W=r("h2"),E=r("a"),E.innerHTML=Ka,b(N.$$.fragment),Na=l(),b(I.$$.fragment),Ia=l(),b(q.$$.fragment),ba=l(),M=r("h2"),O=r("a"),O.innerHTML=Qa,b(F.$$.fragment),fa=l(),b(B.$$.fragment),ma=l(),U=r("div"),oa=r("div"),j=r("table"),ca=r("thead"),C=r("tr"),ua=r("th"),qa=l(),ra=r("th"),b(P.$$.fragment),Fa=l(),da=r("th"),b(D.$$.fragment),Ba=l(),ia=r("th"),b(Y.$$.fragment),Ua=l(),pa=r("tbody"),pa.innerHTML=Xa,ga=l(),H=r("h2"),L=r("a"),L.innerHTML=Za,b(V.$$.fragment),xa=l(),b(z.$$.fragment),$a=l(),b(G.$$.fragment),ya=dt(`:
`),J=r("pre"),va=new Ya(!1),ha=l(),b(K.$$.fragment),ka=dt(`:
`),Q=r("pre"),_a=new Ya(!1),Ca=l(),b(X.$$.fragment),wa=l(),b(Z.$$.fragment),Sa=l(),aa=r("pre"),Ea=new Ya(!1),Oa=l(),b(ta.$$.fragment),this.h()},l(a){o=d(a,"H2",{id:!0});var s=h(o);f(k.$$.fragment,s),s.forEach(t),w=c(a),n=d(a,"DIV",{class:!0});var v=h(n);f(p.$$.fragment,v),_=c(v),f(S.$$.fragment,v),Ha=c(v),na=d(v,"UL",{"data-svelte-h":!0}),la(na)!=="svelte-1btn5tu"&&(na.innerHTML=Ga),Ta=c(v),f(A.$$.fragment,v),Aa=c(v),ea=d(v,"UL",{"data-svelte-h":!0}),la(ea)!=="svelte-18ee2t6"&&(ea.innerHTML=Ja),Ra=c(v),f(R.$$.fragment,v),Wa=c(v),W=d(v,"H2",{id:!0});var ja=h(W);E=d(ja,"A",{"aria-hidden":!0,tabindex:!0,href:!0,"data-svelte-h":!0}),la(E)!=="svelte-1trhte2"&&(E.innerHTML=Ka),f(N.$$.fragment,ja),ja.forEach(t),Na=c(v),f(I.$$.fragment,v),Ia=c(v),f(q.$$.fragment,v),v.forEach(t),ba=c(a),M=d(a,"H2",{id:!0});var Pa=h(M);O=d(Pa,"A",{"aria-hidden":!0,tabindex:!0,href:!0,"data-svelte-h":!0}),la(O)!=="svelte-les9x9"&&(O.innerHTML=Qa),f(F.$$.fragment,Pa),Pa.forEach(t),fa=c(a),f(B.$$.fragment,a),ma=c(a),U=d(a,"DIV",{class:!0});var at=h(U);oa=d(at,"DIV",{class:!0});var tt=h(oa);j=d(tt,"TABLE",{});var Ma=h(j);ca=d(Ma,"THEAD",{});var st=h(ca);C=d(st,"TR",{});var T=h(C);ua=d(T,"TH",{}),h(ua).forEach(t),qa=c(T),ra=d(T,"TH",{});var nt=h(ra);f(P.$$.fragment,nt),nt.forEach(t),Fa=c(T),da=d(T,"TH",{});var et=h(da);f(D.$$.fragment,et),et.forEach(t),Ba=c(T),ia=d(T,"TH",{});var ot=h(ia);f(Y.$$.fragment,ot),ot.forEach(t),T.forEach(t),st.forEach(t),Ua=c(Ma),pa=d(Ma,"TBODY",{"data-svelte-h":!0}),la(pa)!=="svelte-jy68tf"&&(pa.innerHTML=Xa),Ma.forEach(t),tt.forEach(t),at.forEach(t),ga=c(a),H=d(a,"H2",{id:!0});var Da=h(H);L=d(Da,"A",{"aria-hidden":!0,tabindex:!0,href:!0,"data-svelte-h":!0}),la(L)!=="svelte-10vq208"&&(L.innerHTML=Za),f(V.$$.fragment,Da),Da.forEach(t),xa=c(a),f(z.$$.fragment,a),$a=c(a),f(G.$$.fragment,a),ya=it(a,`:
`),J=d(a,"PRE",{class:!0});var pt=h(J);va=Va(pt,!1),pt.forEach(t),ha=c(a),f(K.$$.fragment,a),ka=it(a,`:
`),Q=d(a,"PRE",{class:!0});var lt=h(Q);_a=Va(lt,!1),lt.forEach(t),Ca=c(a),f(X.$$.fragment,a),wa=c(a),f(Z.$$.fragment,a),Sa=c(a),aa=d(a,"PRE",{class:!0});var ct=h(aa);Ea=Va(ct,!1),ct.forEach(t),Oa=c(a),f(ta.$$.fragment,a),this.h()},h(){y(o,"id",""),y(E,"aria-hidden","true"),y(E,"tabindex","-1"),y(E,"href","#-1"),y(W,"id","-1"),y(n,"class","max-w-3xl"),y(O,"aria-hidden","true"),y(O,"tabindex","-1"),y(O,"href","#-2"),y(M,"id","-2"),y(oa,"class","whitespace-nowrap"),y(U,"class","overflow-x-auto"),y(L,"aria-hidden","true"),y(L,"tabindex","-1"),y(L,"href","#-3"),y(H,"id","-3"),va.a=null,y(J,"class","language-html"),_a.a=null,y(Q,"class","language-html"),Ea.a=null,y(aa,"class","language-css")},m(a,s){i(a,o,s),m(k,o,null),i(a,w,s),i(a,n,s),m(p,n,null),e(n,_),m(S,n,null),e(n,Ha),e(n,na),e(n,Ta),m(A,n,null),e(n,Aa),e(n,ea),e(n,Ra),m(R,n,null),e(n,Wa),e(n,W),e(W,E),m(N,W,null),e(n,Na),m(I,n,null),e(n,Ia),m(q,n,null),i(a,ba,s),i(a,M,s),e(M,O),m(F,M,null),i(a,fa,s),m(B,a,s),i(a,ma,s),i(a,U,s),e(U,oa),e(oa,j),e(j,ca),e(ca,C),e(C,ua),e(C,qa),e(C,ra),m(P,ra,null),e(C,Fa),e(C,da),m(D,da,null),e(C,Ba),e(C,ia),m(Y,ia,null),e(j,Ua),e(j,pa),i(a,ga,s),i(a,H,s),e(H,L),m(V,H,null),i(a,xa,s),m(z,a,s),i(a,$a,s),m(G,a,s),i(a,ya,s),i(a,J,s),va.m(mt,J),i(a,ha,s),m(K,a,s),i(a,ka,s),i(a,Q,s),_a.m(ut,Q),i(a,Ca,s),m(X,a,s),i(a,wa,s),m(Z,a,s),i(a,Sa,s),i(a,aa,s),Ea.m(gt,aa),i(a,Oa,s),m(ta,a,s),La=!0},p:$t,i(a){La||(u(k.$$.fragment,a),u(p.$$.fragment,a),u(S.$$.fragment,a),u(A.$$.fragment,a),u(R.$$.fragment,a),u(N.$$.fragment,a),u(I.$$.fragment,a),u(q.$$.fragment,a),u(F.$$.fragment,a),u(B.$$.fragment,a),u(P.$$.fragment,a),u(D.$$.fragment,a),u(Y.$$.fragment,a),u(V.$$.fragment,a),u(z.$$.fragment,a),u(G.$$.fragment,a),u(K.$$.fragment,a),u(X.$$.fragment,a),u(Z.$$.fragment,a),u(ta.$$.fragment,a),La=!0)},o(a){g(k.$$.fragment,a),g(p.$$.fragment,a),g(S.$$.fragment,a),g(A.$$.fragment,a),g(R.$$.fragment,a),g(N.$$.fragment,a),g(I.$$.fragment,a),g(q.$$.fragment,a),g(F.$$.fragment,a),g(B.$$.fragment,a),g(P.$$.fragment,a),g(D.$$.fragment,a),g(Y.$$.fragment,a),g(V.$$.fragment,a),g(z.$$.fragment,a),g(G.$$.fragment,a),g(K.$$.fragment,a),g(X.$$.fragment,a),g(Z.$$.fragment,a),g(ta.$$.fragment,a),La=!1},d(a){a&&(t(o),t(w),t(n),t(ba),t(M),t(fa),t(ma),t(U),t(ga),t(H),t(xa),t($a),t(ya),t(J),t(ha),t(ka),t(Q),t(Ca),t(wa),t(Sa),t(aa),t(Oa)),x(k),x(p),x(S),x(A),x(R),x(N),x(I),x(q),x(F),x(B,a),x(P),x(D),x(Y),x(V),x(z,a),x(G,a),x(K,a),x(X,a),x(Z,a),x(ta,a)}}}function Ct(sa){let o,k;const w=[sa[0],ft];let n={$$slots:{default:[_t]},$$scope:{ctx:sa}};for(let p=0;p<w.length;p+=1)n=za(n,w[p]);return o=new kt({props:n}),{c(){b(o.$$.fragment)},l(p){f(o.$$.fragment,p)},m(p,_){m(o,p,_),k=!0},p(p,[_]){const S=_&1?ht(w,[_&1&&bt(p[0]),_&0&&bt(ft)]):{};_&2&&(S.$$scope={dirty:_,ctx:p}),o.$set(S)},i(p){k||(u(o.$$.fragment,p),k=!0)},o(p){g(o.$$.fragment,p),k=!1},d(p){x(o,p)}}}const ft={title:"Colors",desc:"How to use daisyUI colors?",published:!0};function wt(sa,o,k){return sa.$$set=w=>{k(0,o=za(za({},o),rt(w)))},o=rt(o),[o]}class Ht extends yt{constructor(o){super(),vt(this,o,wt,Ct,xt,{})}}export{Ht as component};
